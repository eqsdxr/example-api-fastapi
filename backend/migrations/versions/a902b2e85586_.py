"""empty message

Revision ID: a902b2e85586
Revises: c04ff852ea85
Create Date: 2025-02-07 06:33:06.064466

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "a902b2e85586"
down_revision: Union[str, None] = "c04ff852ea85"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users_table", sa.Column("created_at", sa.DateTime(), nullable=False)
    )
    op.add_column(
        "users_table", sa.Column("email", sa.String(length=50), nullable=False)
    )
    op.add_column(
        "users_table", sa.Column("is_activated", sa.Boolean(), nullable=False)
    )
    op.alter_column(
        "users_table",
        "password_hash",
        existing_type=sa.VARCHAR(length=255),
        type_=sa.Text(),
        existing_nullable=False,
    )
    op.create_index(
        op.f("ix_users_table_email"), "users_table", ["email"], unique=True
    )
    op.create_unique_constraint(None, "users_table", ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "users_table", type_="unique")
    op.drop_index(op.f("ix_users_table_email"), table_name="users_table")
    op.alter_column(
        "users_table",
        "password_hash",
        existing_type=sa.Text(),
        type_=sa.VARCHAR(length=255),
        existing_nullable=False,
    )
    op.drop_column("users_table", "is_activated")
    op.drop_column("users_table", "email")
    op.drop_column("users_table", "created_at")
    # ### end Alembic commands ###
